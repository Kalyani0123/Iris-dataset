#Importing the libraries 
 
import numpy as np 
import pandas as pd 
import matplotlib.pyplot as plt 
import matplotlib.image as mpimg 
import seaborn as sns 

data = pd.read_csv("Iris.csv")
x = data.iloc[:,:-1].values
y = data.iloc[:,-1].values

print(x)
len(x)
print(y)
len(y)

#ENCODING THE DEPENDENT VARIABLE

from sklearn.preprocessing import LabelEncoder
l_encode = LabelEncoder()
y=l_encode.fit_transform(y)


print(y)  # Setosa = 0, Versicolor =1, Virginia = 2

len(y)

#SPLITING THE TRAIN AND TEST SET

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state = 3)
print(x_train)
len(x_train)
print(x_test)
len(x_test)
print(y_train)
len(y_train)
print(y_test)
len(y_test)

#DEFINING THE GAUSSIAN CLASSIFIER
from sklearn.naive_bayes import GaussianNB
nvclassifier = GaussianNB() 

#TRAINING THE GAUSSIAN CLASSIFIER
nvclassifier.fit(x_train, y_train) 

#PREDICTING THE TEST RESULTS
y_pred = nvclassifier.predict(x_test)
print(y_pred)
y_pred_vertical = y_pred.reshape(len(y_pred),1)
print(y_pred_vertical)
y_test_vertical = y_test.reshape(len(y_test),1)
print(y_test_vertical)
true_pred = np.concatenate((y_test_vertical,y_pred_vertical),axis=1)
print(true_pred)

#PLOTTING THE CONFUSION MATRIX

from sklearn.metrics import confusion_matrix
confusion_mat=confusion_matrix(y_test,y_pred)
print(confusion_mat)

sns.heatmap(confusion_mat, annot = True)
plt.xlabel("Predicted Label")
plt.ylabel("True Label")
plt.title("Confusion Matrix")
plt.show()

#FINDING THE CLASSIFIER ACCURACY
from sklearn.metrics import accuracy_score
accuracy_score(y_test,y_pred)






